#include <bits/stdc++.h>
    using namespace std;
 
    #define int     long long int
    #define int_MAl1  LONG_LONG_MAl1
    #define int_MIN  LONG_LONG_MIN
    #define mod     1000000007
    #define MOD     998244353
    #define inf     1e18 + 7
    #define all(x)  x.begin(), x.end()
    #define rall(x) x.rbegin(), x.rend()
    #define PI      3.1415926535897932384626
    #define vi      vector<int>
    #define vvi     vector<vector<int>>
    #define vpi     vector<pair<int, int>>
    #define pi      pair<int, int>
    #define uset    unordered_set
    #define umap    unordered_map
    #define pb      push_back
    #define endl    '\n'
    #define sz(x)   (int)x.size()
    #define mp      make_pair
 
    #define fo(i, n) for(int i = 0; i < n; ++i)
    #define foo(i, a, n) for(int i = a; i <n; ++i)
 
    #ifndef ONLINE_JUDGE
    #define debug(l1) cout << #l1 << " -> " << l1 << "\n";
    #else
    #define debug(...)
    #endif
 
    /*-*-*-*-*-*-*-*-*-*-*-*-*FUNCTIONS-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/
    int add(int a, int b, int m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}
    int mul(int a, int b, int m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}
    int sub(int a, int b, int m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}
 
    int power(int a,int b){
    int v=1;
    while(b){
        if(b%2)
            v=(v*a)%mod;
        a=(a*a)%mod;
        b/=2;
    }
    return v;
    }
    int factorial(int n)
    {
    int M =10e9+7;
    int f = 1;
    for (int i = 1; i <= n; i++) 
    f = (f*i) % M;  
    return f;
    }
    bool cmp(pair<int,int>&p1, pair<int,int>&p2){
    if(p1.first!=p2.first)return p1.first<p2.first;
    else{
    return p1.second>p2.second;
    }
    }
    /*-*-*-*-*-*-*-*-*-*-*-*-*SOLUTION-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/
    void solve(){
        int n;
        cin >> n;
        vector<int> dp(n+1,0);
        dp[0]=1;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=6;j++){
                if(j>i)
                    break;
                dp[i]=(dp[i]+dp[i-j])%mod;
            }
        }
        cout << dp[n] << endl;
    }
    /*-*-*-*-*-*-*-*-*-*-*-*-*MAIN_FUNCTION-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/
    int32_t main(){
    ios_base::sync_with_stdio(0), cin.tie(0);
  //  int t;
  //  cin>>t;
  //  while(t--){
        solve();
  //  }
    return 0;
    }        
